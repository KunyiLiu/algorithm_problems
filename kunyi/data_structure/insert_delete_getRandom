class RandomizedSet:
    
    def __init__(self):
        # do intialization if necessary
        self.data_array = []
        self.hash_map = {}

    """
    @param: val: a value to the set
    @return: true if the set did not already contain the specified element or false
    """
    def insert(self, val):
        # dict find O(1)
        if val not in self.hash_map:
            self.data_array.append(val)
            self.hash_map[val] = len(self.data_array) - 1 
            return True 
        return False

    """
    @param: val: a value from the set
    @return: true if the set contained the specified element or false
    """
    def remove(self, val):
        # write your code here
        if val in self.hash_map:
            target_ind = self.hash_map[val]
            del self.hash_map[val]
            # what if the removed one is the last element
            # in this case it's fine
            self.data_array[target_ind] = self.data_array[-1]
            # don't forget to change the last element index
            self.hash_map[self.data_array[-1]] = target_ind
            del self.data_array[-1]
            return True 
        return False

    """
    @return: Get a random element from the set
    """
    def getRandom(self):
        # write your code here
        from random import randint 
        rand_ind = randint(0, len(self.data_array) - 1)
        return self.data_array[rand_ind]


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param = obj.insert(val)
# param = obj.remove(val)
# param = obj.getRandom()
